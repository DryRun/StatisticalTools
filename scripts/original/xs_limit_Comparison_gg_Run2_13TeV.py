#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')

syst = True
#syst = False

########################################################
## DijetLimitCode

masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits = array('d', [10.5454, 19.7451, 12.3585, 3.12581, 3.3185, 1.91614, 1.16177, 1.37181, 1.84513, 1.81173, 1.59247, 1.8136, 2.24945, 2.03803, 1.38889, 1.29787, 1.38632, 1.33388, 1.14575, 0.866594, 0.635951, 0.500446, 0.37322, 0.310025, 0.291638, 0.277028, 0.25957, 0.255045, 0.249723, 0.23554, 0.218904, 0.206927, 0.19663, 0.203432, 0.212901, 0.215584, 0.21468, 0.212325, 0.209186, 0.204148, 0.198026, 0.191322, 0.1857, 0.181377, 0.177349, 0.172401, 0.16765, 0.165819, 0.167806, 0.170941, 0.172965, 0.174285, 0.176359, 0.179971, 0.184041, 0.188741, 0.19496, 0.201702])
xs_exp_limits = array('d', [9.61372, 6.94123, 5.89102, 5.37004, 4.656325, 3.76967, 3.054805, 2.679795, 2.372195, 1.93964, 1.718555, 1.503075, 1.312415, 1.096825, 1.033265, 0.893457, 0.8038545, 0.728714, 0.673936, 0.5897995, 0.5190235, 0.496699, 0.4789045, 0.434043, 0.412885, 0.371281, 0.3372625, 0.2979355, 0.287519, 0.2716795, 0.247283, 0.2467865, 0.235172, 0.2181435, 0.200803, 0.1926765, 0.1846865, 0.178526, 0.1733965, 0.1671675, 0.1580895, 0.1575615, 0.1544575, 0.156659, 0.151003, 0.1496475, 0.147158, 0.146553, 0.150742, 0.1542635, 0.158712, 0.1605845, 0.1618275, 0.168154, 0.1724795, 0.178412, 0.1830205, 0.18977])

masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma = array('d', [4.44056549, 3.4943643, 3.2034187, 2.69289728, 2.4582343, 2.22745348, 1.81458309, 1.60800879, 1.46753462, 1.28488911, 1.12514441, 0.939660559, 0.856249657, 0.74461341, 0.676470931, 0.589625158, 0.518973219, 0.475688585, 0.451244738, 0.41643092, 0.371436439, 0.354623593, 0.341107775, 0.31424668, 0.283553157, 0.262344002, 0.246577166, 0.23066867, 0.219448275, 0.205189239, 0.194966668, 0.193920431, 0.182538316, 0.172034496, 0.1547397, 0.152286649, 0.145943272, 0.142001808, 0.139363262, 0.137597404, 0.134292591, 0.136315326, 0.132570852, 0.132477946, 0.130398957, 0.129725876, 0.129488603, 0.129421566, 0.132038691, 0.13446517, 0.138215896, 0.141222087, 0.142817436, 0.146805019, 0.151099143, 0.154162373, 0.158645728, 0.165085834, 0.233580661, 0.226287422, 0.221531813, 0.218545923, 0.209892018, 0.205470736, 0.209690928, 0.200670023, 0.188994043, 0.194114875, 0.18539903, 0.185533607, 0.193232934, 0.199135806, 0.207183093, 0.198006422, 0.205023098, 0.209588972, 0.213483301, 0.222751318, 0.232335166, 0.241835347, 0.250511683, 0.274966658, 0.294100615, 0.340529385, 0.340500644, 0.346171738, 0.386507432, 0.411688803, 0.441583875, 0.480014447, 0.526172185, 0.566684183, 0.678078161, 0.685881683, 0.722851625, 0.810872945, 0.893526321, 0.977910035, 1.09156483, 1.25414112, 1.4709642, 1.67447751, 1.87915332, 2.14208744, 2.43902421, 2.69322484, 3.02160644, 3.68033554, 4.25039533, 5.29343838, 6.37987483, 8.63536239, 10.7155668, 11.5819715, 14.5426577, 19.9191709])
xs_exp_limits_2sigma = array('d', [2.5878515, 1.99269253, 1.82531, 1.5907267, 1.43061129, 1.3851319, 1.18113946, 1.14234559, 0.961825795, 0.94127232, 0.780980223, 0.627539179, 0.593014469, 0.513754893, 0.487513242, 0.463448917, 0.417599753, 0.374344371, 0.363941988, 0.334029174, 0.305468712, 0.285587317, 0.269319265, 0.248367899, 0.235482102, 0.223537435, 0.207039849, 0.192112812, 0.181097096, 0.16619129, 0.159183896, 0.150554536, 0.139527618, 0.139374383, 0.134709665, 0.133024782, 0.129920466, 0.127254156, 0.126535916, 0.127021856, 0.126235111, 0.126946973, 0.126005014, 0.12528653, 0.124853746, 0.125266814, 0.124627379, 0.123904749, 0.125632166, 0.126815101, 0.127997289, 0.129480198, 0.130688014, 0.134029047, 0.136753374, 0.138412778, 0.139510308, 0.142180297, 0.321876776, 0.310027142, 0.301473419, 0.298779887, 0.271495063, 0.261489275, 0.261971602, 0.269703179, 0.247602002, 0.258995077, 0.246895223, 0.251103001, 0.255883651, 0.257984397, 0.275307326, 0.265484109, 0.26479686, 0.287043052, 0.30488969, 0.302717511, 0.31684741, 0.338167189, 0.344751536, 0.360088253, 0.40101638, 0.485706899, 0.512066753, 0.503553339, 0.50914776, 0.567259281, 0.601579807, 0.661600083, 0.714997531, 0.771327644, 0.942988959, 1.0771223, 1.06052232, 1.10251945, 1.24168477, 1.40779562, 1.55495092, 1.75604614, 2.24416017, 2.64979405, 2.71654264, 3.12991693, 3.6717628, 4.17637779, 4.47252359, 5.21547966, 6.43895784, 9.10979692, 10.2825003, 13.4565782, 16.6110522, 18.5953493, 24.6820557, 35.3225356])

if syst:
  masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits = array('d', [11.8057, 20.7601, 14.657, 3.70947, 3.5999, 2.10043, 1.32966, 1.44624, 1.81971, 1.82842, 1.70214, 1.85273, 2.22697, 2.14083, 1.64716, 1.49441, 1.48205, 1.40681, 1.27007, 1.06516, 0.857015, 0.694113, 0.497087, 0.39766, 0.345922, 0.308307, 0.280453, 0.268337, 0.259626, 0.244612, 0.227675, 0.208329, 0.204188, 0.205788, 0.209639, 0.213032, 0.210629, 0.208294, 0.206958, 0.205824, 0.202745, 0.198402, 0.192509, 0.187964, 0.183166, 0.177585, 0.174108, 0.169282, 0.169997, 0.173785, 0.174444, 0.174608, 0.177134, 0.179941, 0.183491, 0.186392, 0.193173, 0.19869])
  xs_exp_limits = array('d', [10.28345, 7.26675, 6.2373, 5.53806, 4.94541, 4.154015, 3.27887, 2.85148, 2.724895, 2.23854, 1.945135, 1.66021, 1.435275, 1.24683, 1.18977, 1.013715, 0.907142, 0.795846, 0.7526445, 0.681393, 0.603749, 0.556623, 0.532907, 0.487596, 0.4574305, 0.422279, 0.378648, 0.332382, 0.315718, 0.299123, 0.282052, 0.270513, 0.261208, 0.2386465, 0.215956, 0.2014735, 0.193586, 0.186728, 0.182215, 0.174032, 0.165422, 0.161761, 0.157774, 0.160454, 0.153318, 0.152988, 0.1491625, 0.1491045, 0.1531305, 0.156131, 0.160455, 0.161648, 0.162715, 0.1675215, 0.1722355, 0.176619, 0.181097, 0.1878575])

  masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma = array('d', [4.8287732, 3.70305464, 3.3982675, 2.92692978, 2.6404246, 2.43670519, 2.00263582, 1.7856822, 1.595881, 1.45225199, 1.23949842, 1.07252032, 0.945101337, 0.845703453, 0.765383658, 0.670534102, 0.591747584, 0.541397516, 0.527401593, 0.477968108, 0.427157658, 0.395781888, 0.386662394, 0.361006595, 0.325992538, 0.295009666, 0.275501632, 0.251887164, 0.238479541, 0.21976646, 0.208829814, 0.20646609, 0.194311285, 0.183340373, 0.163654136, 0.159350485, 0.150970127, 0.14496397, 0.141405696, 0.139661966, 0.135903362, 0.136894394, 0.134126261, 0.133773938, 0.130961646, 0.129521174, 0.129528647, 0.128612616, 0.132909886, 0.134507418, 0.138625193, 0.141340379, 0.143378959, 0.147234622, 0.151777075, 0.155482323, 0.159512056, 0.16440574, 0.237441178, 0.230489763, 0.225703663, 0.222320324, 0.208163027, 0.204645816, 0.210646517, 0.202928375, 0.189479401, 0.198382201, 0.188454167, 0.191266948, 0.196189394, 0.203011393, 0.212042683, 0.201851129, 0.20833719, 0.218493653, 0.229372448, 0.239259164, 0.24839764, 0.264787026, 0.26626365, 0.291321409, 0.319093993, 0.369165073, 0.36842167, 0.383387113, 0.410679735, 0.441177729, 0.488527121, 0.521877385, 0.571233996, 0.629566099, 0.734879571, 0.787410078, 0.808381652, 0.917331294, 0.999336224, 1.10952458, 1.21080214, 1.40426854, 1.6534765, 1.90550732, 2.04495203, 2.29505399, 2.64441988, 2.99374018, 3.38763835, 4.09831869, 4.73377972, 5.87528772, 6.8527737, 9.0744071, 10.8403478, 12.204525, 14.5629028, 20.1138005])
  xs_exp_limits_2sigma = array('d', [2.92300751, 2.2047897, 1.9789276, 1.67131912, 1.6005346, 1.50839268, 1.32366389, 1.24708348, 1.06051432, 1.05186445, 0.899372637, 0.740743026, 0.696484708, 0.610608641, 0.553513702, 0.505612456, 0.465971878, 0.426238792, 0.413115472, 0.388124639, 0.347497341, 0.320044508, 0.298523652, 0.273304339, 0.261962121, 0.243607588, 0.223474097, 0.21453111, 0.198583158, 0.177877785, 0.172265823, 0.158393374, 0.145218917, 0.1425949, 0.137825658, 0.134504155, 0.129226928, 0.123948638, 0.12248823, 0.126998732, 0.122528425, 0.124781731, 0.1235639, 0.121198751, 0.121157845, 0.120257658, 0.11973558, 0.119527047, 0.121175042, 0.122845253, 0.126704443, 0.1288978, 0.131089339, 0.134260531, 0.137109129, 0.137709818, 0.139138069, 0.143301071, 0.335666282, 0.323185102, 0.315998199, 0.314722779, 0.290874624, 0.27510508, 0.275304488, 0.278581362, 0.26381438, 0.28102456, 0.263207492, 0.265520141, 0.272029574, 0.27573458, 0.30653426, 0.280428316, 0.289727158, 0.319144801, 0.316433106, 0.330407682, 0.339306838, 0.366519719, 0.383200165, 0.433333373, 0.440464335, 0.516018942, 0.540184224, 0.550512843, 0.588492515, 0.642814897, 0.669093039, 0.732269804, 0.815579054, 0.945673455, 1.10723698, 1.22661232, 1.20646585, 1.26550816, 1.40869182, 1.56679941, 1.76502862, 1.96008126, 2.49939814, 2.79434072, 2.98983139, 3.44917925, 4.16829124, 4.5379595, 5.25017982, 5.85079699, 6.77123524, 8.81921756, 10.030446, 13.350016, 15.079182, 18.606591, 22.286019, 29.0532435])

##
########################################################

########################################################
## combine: Asymptotic CLs

masses_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits_CombAsymp = array('d', [21.2659, 27.489, 20.8476, 9.3992, 7.2578, 4.1085, 2.5231, 2.5949, 2.9142, 2.5937, 2.25, 2.4337, 3.0933, 2.668, 1.8344, 1.5328, 1.5803, 1.5128, 1.3269, 1.0792, 0.8156, 0.6922, 0.5202, 0.4186, 0.3473, 0.3028, 0.2648, 0.2535, 0.2462, 0.2289, 0.2138, 0.1964, 0.1876, 0.182, 0.1833, 0.1894, 0.1884, 0.1849, 0.1816, 0.1751, 0.1682, 0.1604, 0.1537, 0.1484, 0.1432, 0.1367, 0.1324, 0.1308, 0.1308, 0.1326, 0.1341, 0.1344, 0.1358, 0.1387, 0.1417, 0.1454, 0.1505, 0.1568])
xs_exp_limits_CombAsymp = array('d', [24.4375, 17.6875, 14.4375, 11.2812, 8.5312, 6.4688, 5.0469, 4.0781, 3.3906, 2.8828, 2.4922, 2.1641, 1.8984, 1.6797, 1.4727, 1.2969, 1.1367, 0.9961, 0.8789, 0.7793, 0.6875, 0.6074, 0.541, 0.4824, 0.4316, 0.3877, 0.3506, 0.3174, 0.29, 0.2666, 0.2471, 0.2275, 0.2119, 0.1982, 0.186, 0.1753, 0.1655, 0.1567, 0.1509, 0.145, 0.1401, 0.1353, 0.1313, 0.1284, 0.1255, 0.1226, 0.1196, 0.1177, 0.1187, 0.1201, 0.1216, 0.1235, 0.126, 0.1284, 0.1313, 0.1353, 0.1392, 0.144])

masses_exp_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma_CombAsymp = array('d', [17.5738, 12.8454, 10.4512, 8.1394, 6.1298, 4.6827, 3.6534, 2.9302, 2.4403, 2.0644, 1.7787, 1.5445, 1.3527, 1.1908, 1.0458, 0.9194, 0.8059, 0.705, 0.621, 0.5458, 0.4815, 0.4251, 0.3763, 0.3344, 0.2964, 0.2648, 0.2382, 0.2149, 0.1949, 0.1774, 0.1626, 0.1492, 0.1381, 0.1274, 0.1188, 0.1103, 0.1033, 0.0972, 0.093, 0.0887, 0.0847, 0.0817, 0.079, 0.0761, 0.074, 0.0717, 0.07, 0.0682, 0.0688, 0.069, 0.0698, 0.0703, 0.0717, 0.073, 0.0748, 0.0761, 0.0785, 0.0807, 0.2577, 0.249, 0.242, 0.235, 0.2298, 0.2254, 0.221, 0.2156, 0.213, 0.2104, 0.2068, 0.2102, 0.2134, 0.2165, 0.2216, 0.2256, 0.2312, 0.2373, 0.2433, 0.2507, 0.2592, 0.2724, 0.2857, 0.3002, 0.3168, 0.3361, 0.3591, 0.384, 0.4122, 0.4438, 0.4806, 0.5253, 0.5778, 0.6398, 0.7074, 0.789, 0.8859, 0.9917, 1.1179, 1.2678, 1.4289, 1.6306, 1.85, 2.1008, 2.3827, 2.693, 3.0698, 3.5154, 4.0434, 4.7557, 5.7199, 7.0385, 9.0214, 11.8298, 15.6431, 19.9046, 24.5263, 33.8862])
xs_exp_limits_2sigma_CombAsymp = array('d', [13.3165, 9.6383, 7.8109, 6.1254, 4.6155, 3.4997, 2.7304, 2.2063, 1.8211, 1.5484, 1.3288, 1.1539, 1.0085, 0.8825, 0.7766, 0.6814, 0.5972, 0.5214, 0.4583, 0.4033, 0.3558, 0.312, 0.2758, 0.244, 0.2167, 0.1923, 0.1719, 0.1544, 0.1388, 0.1265, 0.1144, 0.1044, 0.096, 0.0883, 0.0818, 0.0757, 0.0702, 0.0655, 0.0622, 0.0586, 0.0561, 0.0536, 0.0511, 0.0492, 0.0475, 0.0455, 0.0444, 0.0427, 0.0431, 0.0427, 0.0432, 0.0439, 0.0438, 0.0449, 0.0457, 0.0468, 0.0478, 0.0492, 0.4282, 0.4164, 0.402, 0.393, 0.3817, 0.372, 0.3648, 0.3565, 0.3522, 0.3455, 0.3401, 0.3434, 0.349, 0.3519, 0.3575, 0.3655, 0.3705, 0.3775, 0.3869, 0.3954, 0.407, 0.4222, 0.4422, 0.4641, 0.4844, 0.5119, 0.5385, 0.5719, 0.6099, 0.6543, 0.702, 0.7598, 0.829, 0.9105, 1.0011, 1.1067, 1.2351, 1.378, 1.5433, 1.7452, 1.9602, 2.2226, 2.5288, 2.8715, 3.2449, 3.6675, 4.1532, 4.7375, 5.4639, 6.383, 7.6251, 9.4076, 11.9749, 15.7438, 20.673, 26.3727, 32.4125, 44.7819])

if syst:
  masses_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits_CombAsymp = array('d', [41.9867, 29.8721, 27.9549, 16.2811, 8.7975, 6.1621, 3.3181, 2.9805, 3.1091, 2.8594, 2.4289, 3.3778, 3.2116, 2.9466, 3.4181, 1.8147, 1.6706, 1.5641, 1.5309, 1.3891, 1.5301, 0.9709, 0.791, 0.5533, 0.4195, 0.344, 0.2983, 0.2688, 0.256, 0.2387, 0.2233, 0.2061, 0.1939, 0.1981, 0.2024, 0.1954, 0.192, 0.189, 0.1861, 0.1818, 0.1803, 0.1775, 0.1701, 0.1599, 0.1514, 0.1435, 0.1378, 0.1353, 0.1345, 0.1358, 0.1374, 0.1376, 0.1391, 0.1419, 0.1449, 0.1484, 0.1538, 0.1601])
  xs_exp_limits_CombAsymp = array('d', [35.8125, 20.6875, 16.6875, 13.3125, 10.1562, 7.5938, 5.8594, 4.6406, 3.8281, 3.2188, 2.7578, 2.3984, 2.1172, 1.8594, 1.6484, 1.4492, 1.2773, 1.1211, 0.9883, 0.8711, 0.7715, 0.6816, 0.6035, 0.5371, 0.4785, 0.4277, 0.3848, 0.3467, 0.3154, 0.2881, 0.2646, 0.2451, 0.2256, 0.21, 0.1963, 0.1841, 0.1733, 0.1636, 0.1567, 0.1499, 0.145, 0.1401, 0.1357, 0.1323, 0.1284, 0.1255, 0.1226, 0.1206, 0.1216, 0.1226, 0.1245, 0.1265, 0.1284, 0.1313, 0.1343, 0.1382, 0.1421, 0.147])

  masses_exp_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma_CombAsymp = array('d', [23.0115, 13.979, 11.2966, 9.0061, 6.8254, 5.1219, 3.9665, 3.1529, 2.6008, 2.182, 1.8804, 1.6259, 1.4247, 1.2512, 1.1052, 0.9716, 0.8532, 0.7488, 0.6601, 0.5819, 0.5134, 0.4536, 0.4001, 0.3554, 0.3161, 0.2815, 0.2514, 0.2254, 0.2046, 0.1862, 0.1697, 0.1555, 0.1435, 0.1321, 0.1225, 0.1144, 0.1069, 0.1, 0.0954, 0.0907, 0.0869, 0.0834, 0.0803, 0.0776, 0.0753, 0.0728, 0.071, 0.0693, 0.0695, 0.0698, 0.0703, 0.0714, 0.0723, 0.0738, 0.0752, 0.0772, 0.0792, 0.082, 0.2677, 0.2588, 0.2516, 0.2445, 0.2392, 0.2328, 0.2283, 0.2248, 0.2212, 0.2175, 0.2158, 0.2193, 0.2225, 0.2257, 0.2304, 0.2364, 0.2418, 0.2502, 0.2587, 0.2654, 0.277, 0.2908, 0.3059, 0.3262, 0.3455, 0.3677, 0.3956, 0.4271, 0.4603, 0.5003, 0.5471, 0.601, 0.6647, 0.7398, 0.8261, 0.9235, 1.043, 1.1743, 1.326, 1.5043, 1.6976, 1.9342, 2.1944, 2.4829, 2.8006, 3.1721, 3.5935, 4.1319, 4.7968, 5.6745, 6.9158, 8.6854, 11.3168, 15.0547, 19.8394, 24.7361, 30.8302, 54.5128])
  xs_exp_limits_2sigma_CombAsymp = array('d', [15.4581, 10.0205, 8.1156, 6.4222, 4.8599, 3.6634, 2.8496, 2.275, 1.8767, 1.5905, 1.3627, 1.1852, 1.0296, 0.9043, 0.7952, 0.6991, 0.6112, 0.5365, 0.4729, 0.4168, 0.3662, 0.3235, 0.2841, 0.2518, 0.2234, 0.198, 0.1766, 0.1584, 0.1435, 0.13, 0.1173, 0.1077, 0.0983, 0.0906, 0.0832, 0.0773, 0.0714, 0.0668, 0.0628, 0.0597, 0.0569, 0.0542, 0.0517, 0.0499, 0.0479, 0.0466, 0.0445, 0.0438, 0.0432, 0.0436, 0.0433, 0.044, 0.0444, 0.0452, 0.0459, 0.047, 0.048, 0.0497, 0.4455, 0.4307, 0.4189, 0.407, 0.3982, 0.3893, 0.3833, 0.3774, 0.3715, 0.3661, 0.362, 0.3667, 0.3704, 0.3763, 0.3849, 0.3921, 0.3988, 0.4097, 0.4204, 0.4321, 0.4475, 0.4662, 0.4903, 0.5144, 0.5446, 0.579, 0.6169, 0.6572, 0.7039, 0.762, 0.8244, 0.8989, 0.9902, 1.0947, 1.2139, 1.3544, 1.5136, 1.7007, 1.9202, 2.1668, 2.453, 2.7949, 3.171, 3.5996, 4.0602, 4.5627, 5.1688, 5.8768, 6.8049, 8.075, 9.7547, 12.2883, 15.9623, 21.2997, 27.9833, 34.7939, 43.2352, 77.2452])

##
########################################################

########################################################
## combine: MarkovChainMC

masses_CombMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits_CombMCMC = array('d', [6.29997, 18.8879, 13.6501, 3.45402, 3.20124, 1.66914, 1.09783, 1.35748, 1.82204, 1.68001, 1.44649, 1.71999, 2.48284, 2.15194, 1.37187, 1.10153, 1.26928, 1.31007, 1.1644, 0.933466, 0.701343, 0.570482, 0.454499, 0.350853, 0.302966, 0.272351, 0.23627, 0.241333, 0.246041, 0.235204, 0.218955, 0.202188, 0.189453, 0.196362, 0.204883, 0.210454, 0.209487, 0.208947, 0.207545, 0.203181, 0.195561, 0.18717, 0.182281, 0.177854, 0.173091, 0.169127, 0.164188, 0.164183, 0.165242, 0.16583, 0.169705, 0.169415, 0.169375, 0.174092, 0.178317, 0.181026, 0.188639, 0.194976])

if syst:
  masses_CombMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits_CombMCMC = array('d', [7.44402, 19.3976, 15.5686, 4.34118, 3.45568, 1.99541, 1.29404, 1.4295, 1.78539, 1.78618, 1.56902, 1.86928, 2.44864, 2.27437, 1.83352, 1.24521, 1.27, 1.28709, 1.26157, 1.07685, 0.967933, 0.712203, 0.563705, 0.421888, 0.350703, 0.297868, 0.269112, 0.256453, 0.24679, 0.242484, 0.223711, 0.21832, 0.198479, 0.204062, 0.211809, 0.20771, 0.205224, 0.208954, 0.211999, 0.205358, 0.205538, 0.207218, 0.192858, 0.190222, 0.181742, 0.178707, 0.173645, 0.172663, 0.170604, 0.171877, 0.172115, 0.177275, 0.176326, 0.179339, 0.190178, 0.193937, 0.193825, 0.203502])

##
########################################################

########################################################
## theta: MarkovChainMC

masses_thetaMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits_thetaMCMC = array('d', [6.2269, 18.781, 13.662, 3.4098, 3.1396, 1.6562, 1.1102, 1.3278, 1.7876, 1.612, 1.4438, 1.7162, 2.4846, 2.1355, 1.3503, 1.0895, 1.263, 1.2898, 1.1607, 0.93982, 0.6759, 0.5722, 0.44056, 0.34601, 0.30556, 0.26955, 0.23851, 0.2377, 0.24642, 0.2339, 0.21792, 0.19438, 0.18922, 0.19268, 0.20508, 0.20743, 0.21131, 0.20795, 0.20817, 0.19964, 0.19192, 0.18457, 0.18131, 0.17388, 0.1717, 0.16531, 0.16541, 0.16201, 0.16319, 0.16508, 0.16793, 0.16827, 0.17154, 0.173, 0.18067, 0.18415, 0.18248, 0.19263])

if syst:
  masses_thetaMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits_thetaMCMC = array('d', [7.2602, 18.83, 15.675, 4.2641, 3.3888, 2.0017, 1.2978, 1.4139, 1.6849, 1.7134, 1.5324, 1.8205, 2.4656, 2.2656, 1.7922, 1.2457, 1.2721, 1.3011, 1.228, 1.0291, 0.92066, 0.69318, 0.57855, 0.39978, 0.34339, 0.30034, 0.25985, 0.25033, 0.23649, 0.24412, 0.21968, 0.20456, 0.20431, 0.19794, 0.20403, 0.20522, 0.2103, 0.20741, 0.19805, 0.20375, 0.1995, 0.19984, 0.18678, 0.19322, 0.18199, 0.17408, 0.16358, 0.17355, 0.16295, 0.17491, 0.17533, 0.17592, 0.17942, 0.18207, 0.19391, 0.19059, 0.19457, 0.20715])

##
########################################################

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("gg resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-02,1e+03)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(2)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)

graph_exp_2sigma_CombAsymp = TGraph(len(masses_exp_CombAsymp),masses_exp_CombAsymp,xs_exp_limits_2sigma_CombAsymp)
graph_exp_2sigma_CombAsymp.SetFillColor(kViolet)
graph_exp_2sigma_CombAsymp.SetFillStyle(3002)

graph_exp_1sigma_CombAsymp = TGraph(len(masses_exp_CombAsymp),masses_exp_CombAsymp,xs_exp_limits_1sigma_CombAsymp)
graph_exp_1sigma_CombAsymp.SetFillColor(kRed+1)
graph_exp_1sigma_CombAsymp.SetFillStyle(3244)

graph_exp_CombAsymp = TGraph(len(masses_CombAsymp),masses_CombAsymp,xs_exp_limits_CombAsymp)
graph_exp_CombAsymp.SetLineWidth(2)
graph_exp_CombAsymp.SetLineStyle(2)
graph_exp_CombAsymp.SetLineColor(kSpring+7)

graph_obs_CombAsymp = TGraph(len(masses_CombAsymp),masses_CombAsymp,xs_obs_limits_CombAsymp)
graph_obs_CombAsymp.SetMarkerStyle(22)
graph_obs_CombAsymp.SetMarkerColor(kRed)
graph_obs_CombAsymp.SetLineWidth(2)
graph_obs_CombAsymp.SetLineStyle(2)
graph_obs_CombAsymp.SetLineColor(kRed)

graph_obs_CombMCMC = TGraph(len(masses_CombMCMC),masses_CombMCMC,xs_obs_limits_CombMCMC)
graph_obs_CombMCMC.SetMarkerStyle(27)
graph_obs_CombMCMC.SetMarkerSize(1.5)
graph_obs_CombMCMC.SetMarkerColor(7)
graph_obs_CombMCMC.SetLineWidth(2)
graph_obs_CombMCMC.SetLineStyle(3)
graph_obs_CombMCMC.SetLineColor(7)

graph_obs_thetaMCMC = TGraph(len(masses_thetaMCMC),masses_thetaMCMC,xs_obs_limits_thetaMCMC)
graph_obs_thetaMCMC.SetMarkerStyle(32)
#graph_obs_thetaMCMC.SetMarkerSize(1.5)
graph_obs_thetaMCMC.SetMarkerColor(6)
graph_obs_thetaMCMC.SetLineWidth(2)
graph_obs_thetaMCMC.SetLineStyle(4)
graph_obs_thetaMCMC.SetLineColor(6)

c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
#graph_exp_2sigma_CombAsymp.Draw("F")
#graph_exp_1sigma_CombAsymp.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
#graph_exp_CombAsymp.Draw("L")
graph_obs_CombAsymp.Draw("LP")
graph_obs_CombMCMC.Draw("LP")
graph_obs_thetaMCMC.Draw("LP")


legend = TLegend(.60,.77,.90,.92)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legend_CombAsymp = TLegend(.60,.68,.90,.75)
legend_CombAsymp.SetBorderSize(0)
legend_CombAsymp.SetFillColor(0)
legend_CombAsymp.SetFillStyle(0)
legend_CombAsymp.SetTextFont(42)
legend_CombAsymp.SetTextSize(0.03)
legend_CombAsymp.SetHeader('combine: Asymptotic CL_{S}')
legend_CombAsymp.AddEntry(graph_obs_CombAsymp,"Observed","lp")
#legend_CombAsymp.AddEntry(graph_exp_CombAsymp,"Expected","lp")
#legend_CombAsymp.AddEntry(graph_exp_1sigma_CombAsymp,"#pm 1#sigma","F")
#legend_CombAsymp.AddEntry(graph_exp_2sigma_CombAsymp,"#pm 2#sigma","F")
legend_CombAsymp.Draw()

legend_CombMCMC = TLegend(.60,.59,.90,.66)
legend_CombMCMC.SetBorderSize(0)
legend_CombMCMC.SetFillColor(0)
legend_CombMCMC.SetFillStyle(0)
legend_CombMCMC.SetTextFont(42)
legend_CombMCMC.SetTextSize(0.03)
legend_CombMCMC.SetHeader('combine: Bayesian')
legend_CombMCMC.AddEntry(graph_obs_CombMCMC,"Observed","lp")
legend_CombMCMC.Draw()

legend_thetaMCMC = TLegend(.60,.50,.90,.57)
legend_thetaMCMC.SetBorderSize(0)
legend_thetaMCMC.SetFillColor(0)
legend_thetaMCMC.SetFillStyle(0)
legend_thetaMCMC.SetTextFont(42)
legend_thetaMCMC.SetTextSize(0.03)
legend_thetaMCMC.SetHeader('theta: Bayesian')
legend_thetaMCMC.AddEntry(graph_obs_thetaMCMC,"Observed","lp")
legend_thetaMCMC.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

#draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "40.2 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_Comparison_gg' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_40p2_invpb.eps')
