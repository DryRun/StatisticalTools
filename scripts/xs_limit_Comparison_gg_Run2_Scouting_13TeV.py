#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')

syst = True
#syst = False

########################################################
## DijetLimitCode

masses = array('d', [1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0])
xs_obs_limits = array('d', [2.58742, 1.95433, 1.03081, 2.42318, 5.85086, 3.4718, 1.98586, 1.83656, 1.46762, 1.4594, 1.19648])

if syst:
  masses = array('d', [1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0])
  xs_obs_limits = array('d', [7.19274, 5.2876, 2.83616, 6.5397, 8.59732, 7.28191, 4.74864, 4.13122, 3.16772, 2.79699, 2.40957])
##
########################################################

########################################################
## combine: Asymptotic CLs

masses_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits_CombAsymp = array('d', [21.2659, 27.489, 20.8476, 9.3992, 7.2578, 4.1085, 2.5231, 2.5949, 2.9142, 2.5937, 2.25, 2.4337, 3.0933, 2.668, 1.8344, 1.5328, 1.5803, 1.5128, 1.3269, 1.0792, 0.8156, 0.6922, 0.5202, 0.4186, 0.3473, 0.3028, 0.2648, 0.2535, 0.2462, 0.2289, 0.2138, 0.1964, 0.1876, 0.182, 0.1833, 0.1894, 0.1884, 0.1849, 0.1816, 0.1751, 0.1682, 0.1604, 0.1537, 0.1484, 0.1432, 0.1367, 0.1324, 0.1308, 0.1308, 0.1326, 0.1341, 0.1344, 0.1358, 0.1387, 0.1417, 0.1454, 0.1505, 0.1568])
xs_exp_limits_CombAsymp = array('d', [24.4375, 17.6875, 14.4375, 11.2812, 8.5312, 6.4688, 5.0469, 4.0781, 3.3906, 2.8828, 2.4922, 2.1641, 1.8984, 1.6797, 1.4727, 1.2969, 1.1367, 0.9961, 0.8789, 0.7793, 0.6875, 0.6074, 0.541, 0.4824, 0.4316, 0.3877, 0.3506, 0.3174, 0.29, 0.2666, 0.2471, 0.2275, 0.2119, 0.1982, 0.186, 0.1753, 0.1655, 0.1567, 0.1509, 0.145, 0.1401, 0.1353, 0.1313, 0.1284, 0.1255, 0.1226, 0.1196, 0.1177, 0.1187, 0.1201, 0.1216, 0.1235, 0.126, 0.1284, 0.1313, 0.1353, 0.1392, 0.144])

masses_exp_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma_CombAsymp = array('d', [17.5738, 12.8454, 10.4512, 8.1394, 6.1298, 4.6827, 3.6534, 2.9302, 2.4403, 2.0644, 1.7787, 1.5445, 1.3527, 1.1908, 1.0458, 0.9194, 0.8059, 0.705, 0.621, 0.5458, 0.4815, 0.4251, 0.3763, 0.3344, 0.2964, 0.2648, 0.2382, 0.2149, 0.1949, 0.1774, 0.1626, 0.1492, 0.1381, 0.1274, 0.1188, 0.1103, 0.1033, 0.0972, 0.093, 0.0887, 0.0847, 0.0817, 0.079, 0.0761, 0.074, 0.0717, 0.07, 0.0682, 0.0688, 0.069, 0.0698, 0.0703, 0.0717, 0.073, 0.0748, 0.0761, 0.0785, 0.0807, 0.2577, 0.249, 0.242, 0.235, 0.2298, 0.2254, 0.221, 0.2156, 0.213, 0.2104, 0.2068, 0.2102, 0.2134, 0.2165, 0.2216, 0.2256, 0.2312, 0.2373, 0.2433, 0.2507, 0.2592, 0.2724, 0.2857, 0.3002, 0.3168, 0.3361, 0.3591, 0.384, 0.4122, 0.4438, 0.4806, 0.5253, 0.5778, 0.6398, 0.7074, 0.789, 0.8859, 0.9917, 1.1179, 1.2678, 1.4289, 1.6306, 1.85, 2.1008, 2.3827, 2.693, 3.0698, 3.5154, 4.0434, 4.7557, 5.7199, 7.0385, 9.0214, 11.8298, 15.6431, 19.9046, 24.5263, 33.8862])
xs_exp_limits_2sigma_CombAsymp = array('d', [13.3165, 9.6383, 7.8109, 6.1254, 4.6155, 3.4997, 2.7304, 2.2063, 1.8211, 1.5484, 1.3288, 1.1539, 1.0085, 0.8825, 0.7766, 0.6814, 0.5972, 0.5214, 0.4583, 0.4033, 0.3558, 0.312, 0.2758, 0.244, 0.2167, 0.1923, 0.1719, 0.1544, 0.1388, 0.1265, 0.1144, 0.1044, 0.096, 0.0883, 0.0818, 0.0757, 0.0702, 0.0655, 0.0622, 0.0586, 0.0561, 0.0536, 0.0511, 0.0492, 0.0475, 0.0455, 0.0444, 0.0427, 0.0431, 0.0427, 0.0432, 0.0439, 0.0438, 0.0449, 0.0457, 0.0468, 0.0478, 0.0492, 0.4282, 0.4164, 0.402, 0.393, 0.3817, 0.372, 0.3648, 0.3565, 0.3522, 0.3455, 0.3401, 0.3434, 0.349, 0.3519, 0.3575, 0.3655, 0.3705, 0.3775, 0.3869, 0.3954, 0.407, 0.4222, 0.4422, 0.4641, 0.4844, 0.5119, 0.5385, 0.5719, 0.6099, 0.6543, 0.702, 0.7598, 0.829, 0.9105, 1.0011, 1.1067, 1.2351, 1.378, 1.5433, 1.7452, 1.9602, 2.2226, 2.5288, 2.8715, 3.2449, 3.6675, 4.1532, 4.7375, 5.4639, 6.383, 7.6251, 9.4076, 11.9749, 15.7438, 20.673, 26.3727, 32.4125, 44.7819])

if syst:
  masses_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits_CombAsymp = array('d', [41.9867, 29.8721, 27.9549, 16.2811, 8.7975, 6.1621, 3.3181, 2.9805, 3.1091, 2.8594, 2.4289, 3.3778, 3.2116, 2.9466, 3.4181, 1.8147, 1.6706, 1.5641, 1.5309, 1.3891, 1.5301, 0.9709, 0.791, 0.5533, 0.4195, 0.344, 0.2983, 0.2688, 0.256, 0.2387, 0.2233, 0.2061, 0.1939, 0.1981, 0.2024, 0.1954, 0.192, 0.189, 0.1861, 0.1818, 0.1803, 0.1775, 0.1701, 0.1599, 0.1514, 0.1435, 0.1378, 0.1353, 0.1345, 0.1358, 0.1374, 0.1376, 0.1391, 0.1419, 0.1449, 0.1484, 0.1538, 0.1601])
  xs_exp_limits_CombAsymp = array('d', [35.8125, 20.6875, 16.6875, 13.3125, 10.1562, 7.5938, 5.8594, 4.6406, 3.8281, 3.2188, 2.7578, 2.3984, 2.1172, 1.8594, 1.6484, 1.4492, 1.2773, 1.1211, 0.9883, 0.8711, 0.7715, 0.6816, 0.6035, 0.5371, 0.4785, 0.4277, 0.3848, 0.3467, 0.3154, 0.2881, 0.2646, 0.2451, 0.2256, 0.21, 0.1963, 0.1841, 0.1733, 0.1636, 0.1567, 0.1499, 0.145, 0.1401, 0.1357, 0.1323, 0.1284, 0.1255, 0.1226, 0.1206, 0.1216, 0.1226, 0.1245, 0.1265, 0.1284, 0.1313, 0.1343, 0.1382, 0.1421, 0.147])

  masses_exp_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma_CombAsymp = array('d', [23.0115, 13.979, 11.2966, 9.0061, 6.8254, 5.1219, 3.9665, 3.1529, 2.6008, 2.182, 1.8804, 1.6259, 1.4247, 1.2512, 1.1052, 0.9716, 0.8532, 0.7488, 0.6601, 0.5819, 0.5134, 0.4536, 0.4001, 0.3554, 0.3161, 0.2815, 0.2514, 0.2254, 0.2046, 0.1862, 0.1697, 0.1555, 0.1435, 0.1321, 0.1225, 0.1144, 0.1069, 0.1, 0.0954, 0.0907, 0.0869, 0.0834, 0.0803, 0.0776, 0.0753, 0.0728, 0.071, 0.0693, 0.0695, 0.0698, 0.0703, 0.0714, 0.0723, 0.0738, 0.0752, 0.0772, 0.0792, 0.082, 0.2677, 0.2588, 0.2516, 0.2445, 0.2392, 0.2328, 0.2283, 0.2248, 0.2212, 0.2175, 0.2158, 0.2193, 0.2225, 0.2257, 0.2304, 0.2364, 0.2418, 0.2502, 0.2587, 0.2654, 0.277, 0.2908, 0.3059, 0.3262, 0.3455, 0.3677, 0.3956, 0.4271, 0.4603, 0.5003, 0.5471, 0.601, 0.6647, 0.7398, 0.8261, 0.9235, 1.043, 1.1743, 1.326, 1.5043, 1.6976, 1.9342, 2.1944, 2.4829, 2.8006, 3.1721, 3.5935, 4.1319, 4.7968, 5.6745, 6.9158, 8.6854, 11.3168, 15.0547, 19.8394, 24.7361, 30.8302, 54.5128])
  xs_exp_limits_2sigma_CombAsymp = array('d', [15.4581, 10.0205, 8.1156, 6.4222, 4.8599, 3.6634, 2.8496, 2.275, 1.8767, 1.5905, 1.3627, 1.1852, 1.0296, 0.9043, 0.7952, 0.6991, 0.6112, 0.5365, 0.4729, 0.4168, 0.3662, 0.3235, 0.2841, 0.2518, 0.2234, 0.198, 0.1766, 0.1584, 0.1435, 0.13, 0.1173, 0.1077, 0.0983, 0.0906, 0.0832, 0.0773, 0.0714, 0.0668, 0.0628, 0.0597, 0.0569, 0.0542, 0.0517, 0.0499, 0.0479, 0.0466, 0.0445, 0.0438, 0.0432, 0.0436, 0.0433, 0.044, 0.0444, 0.0452, 0.0459, 0.047, 0.048, 0.0497, 0.4455, 0.4307, 0.4189, 0.407, 0.3982, 0.3893, 0.3833, 0.3774, 0.3715, 0.3661, 0.362, 0.3667, 0.3704, 0.3763, 0.3849, 0.3921, 0.3988, 0.4097, 0.4204, 0.4321, 0.4475, 0.4662, 0.4903, 0.5144, 0.5446, 0.579, 0.6169, 0.6572, 0.7039, 0.762, 0.8244, 0.8989, 0.9902, 1.0947, 1.2139, 1.3544, 1.5136, 1.7007, 1.9202, 2.1668, 2.453, 2.7949, 3.171, 3.5996, 4.0602, 4.5627, 5.1688, 5.8768, 6.8049, 8.075, 9.7547, 12.2883, 15.9623, 21.2997, 27.9833, 34.7939, 43.2352, 77.2452])

##
########################################################

########################################################
## combine: MarkovChainMC

masses_CombMCMC = array('d', [1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0])
xs_obs_limits_CombMCMC = array('d', [1.89893, 1.23385, 0.843788, 2.70822, 8.03086, 5.01141, 2.735, 1.65767, 1.61934, 1.65388, 1.38083])

if syst:
  masses_CombMCMC = array('d', [1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0])
  xs_obs_limits_CombMCMC = array('d', [5.90542, 3.84301, 3.07395, 7.44331, 9.70615, 8.41523, 5.1107, 3.50326, 3.32944, 2.91715, 2.57295])

##
########################################################


graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(2)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)
graph_obs.GetXaxis().SetTitle("gg resonance mass [GeV]")
graph_obs.GetYaxis().SetTitle("#sigma #times #it{B} #times #it{A} [pb]")
graph_obs.GetYaxis().SetTitleOffset(1.1)
graph_obs.GetYaxis().SetRangeUser(1e-01,1e+03)
#graph_obs.GetXaxis().SetNdivisions(1005)

graph_obs_CombAsymp = TGraph(len(masses_CombAsymp),masses_CombAsymp,xs_obs_limits_CombAsymp)
graph_obs_CombAsymp.SetMarkerStyle(22)
graph_obs_CombAsymp.SetMarkerColor(kRed)
graph_obs_CombAsymp.SetLineWidth(2)
graph_obs_CombAsymp.SetLineStyle(2)
graph_obs_CombAsymp.SetLineColor(kRed)

graph_obs_CombMCMC = TGraph(len(masses_CombMCMC),masses_CombMCMC,xs_obs_limits_CombMCMC)
graph_obs_CombMCMC.SetMarkerStyle(27)
graph_obs_CombMCMC.SetMarkerSize(1.5)
graph_obs_CombMCMC.SetMarkerColor(7)
graph_obs_CombMCMC.SetLineWidth(2)
graph_obs_CombMCMC.SetLineStyle(3)
graph_obs_CombMCMC.SetLineColor(7)

c = TCanvas("c", "",800,800)
c.cd()

graph_obs.Draw("ALP")
#graph_obs_CombAsymp.Draw("LP")
graph_obs_CombMCMC.Draw("LP")


legend = TLegend(.60,.77,.90,.92)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.Draw()

legend_CombAsymp = TLegend(.60,.68,.90,.75)
legend_CombAsymp.SetBorderSize(0)
legend_CombAsymp.SetFillColor(0)
legend_CombAsymp.SetFillStyle(0)
legend_CombAsymp.SetTextFont(42)
legend_CombAsymp.SetTextSize(0.03)
legend_CombAsymp.SetHeader('combine: Asymptotic CL_{S}')
legend_CombAsymp.AddEntry(graph_obs_CombAsymp,"Observed","lp")
#legend_CombAsymp.Draw()

legend_CombMCMC = TLegend(.60,.59,.90,.66)
legend_CombMCMC.SetBorderSize(0)
legend_CombMCMC.SetFillColor(0)
legend_CombMCMC.SetFillStyle(0)
legend_CombMCMC.SetTextFont(42)
legend_CombMCMC.SetTextSize(0.03)
legend_CombMCMC.SetHeader('combine: Bayesian')
legend_CombMCMC.AddEntry(graph_obs_CombMCMC,"Observed","lp")
legend_CombMCMC.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

#draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "1.9 fb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_Comparison_gg' + ('_NoSyst' if not syst else '') + '_Run2_Scouting_13TeV_DATA_1866_invpb.eps')
